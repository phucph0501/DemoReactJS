{"version":3,"sources":["layout/Header.js","TodoItem.js","Todos.js","AddTodo.js","Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","TodoApp.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["Header","className","React","Component","TodoItem","this","props","todo","completed","id","title","type","checked","onChange","handleChange","onClick","deleteTodo","Todos","todos","map","AddTodo","useState","setTitle","placeholder","value","e","target","preventDefault","addTodo","Footer","themeColor","color","console","log","saveColorTheme","useEffect","document","documentElement","style","setProperty","connect","state","dispatch","payload","saveTheme","TodoApp","setState","axios","get","params","_limit","then","response","data","newTodo","post","delete","filter","initState","combineReducers","action","JSON","stringify","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dfbcd4c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header-container\">\r\n                <h1 className=\"header-title\">Simple Todo App</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nclass TodoItem extends React.Component {\r\n    render() {\r\n        const { completed, id, title } = this.props.todo\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={completed}\r\n                    onChange={() => this.props.handleChange(id)}\r\n                />\r\n                <span className={completed ? \"completed\" : null}>\r\n                    {title}\r\n                </span>\r\n                <button className=\"btn-style\" onClick={() => this.props.deleteTodo(id)}>X</button>\r\n            </li>\r\n        );\r\n    };\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nclass Todos extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {this.props.todos.map(todo => (\r\n                        <TodoItem\r\n                            key={todo.id}\r\n                            todo={todo}\r\n                            handleChange={this.props.handleChange}\r\n                            deleteTodo={this.props.deleteTodo}\r\n                        ></TodoItem>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Todos;","import React, {useState} from 'react';\r\n\r\nfunction AddTodo (props){\r\n    const [title, setTitle] = useState(\"\");\r\n    const onInputChange = e =>{\r\n        setTitle(e.target.value);\r\n    };\r\n    const addTodo = e =>{\r\n        e.preventDefault();\r\n        props.addTodo(title);\r\n        setTitle(\"\");\r\n    }\r\n    return(\r\n        <form className=\"form-container\">\r\n            <input type=\"text\"\r\n            placeholder = \"Add Todo...\"\r\n            className=\"input-text\"\r\n            value={title}\r\n            onChange={onInputChange}\r\n            />\r\n            <input type=\"submit\"\r\n            value=\"Submit\"\r\n            className=\"input-submit\"\r\n            onClick={addTodo}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n/*class AddTodo extends React.Component {\r\n    onInputChange = e => {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n    addTodo = e => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title)\r\n        this.setState({\r\n            title: \"\"\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"form-container\">\r\n                <input type=\"text\"\r\n                    placeholder=\"Add Todo...\"\r\n                    className=\"input-text\"\r\n                    value={this.state.title}\r\n                    onChange={this.onInputChange}\r\n                />\r\n                <input type=\"submit\" value=\"Submit\" className=\"input-submit\" onClick={this.addTodo}/>\r\n            </form>\r\n        )\r\n    }\r\n    state = {\r\n        title: \"\"\r\n    };\r\n};*/\r\n\r\nexport default AddTodo;","import React, { useState, useEffect } from 'react';\r\n\r\nconst RED = \"#ff0000\"\r\nconst BLUE = \"#0000ff\"\r\nconst GRAY = \"#678c89\"\r\n\r\nfunction Footer(props) {\r\n    const [submitThemeColor, setSubmitThemeColor] = useState(\"\")\r\n\r\n    const themeColor = (color) => {\r\n        if (color) {\r\n            console.log(`handleChangeTheme`)\r\n            props.saveColorTheme(color);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.documentElement.style.setProperty(\r\n            \"--main-color\",\r\n            props.themeColor.color\r\n        );\r\n    },[props.themeColor])\r\n\r\n    const componentWillReceiveProps = (nextprops) => {\r\n        console.log(\r\n            \"UNSAFE_componentWillReceiveProps: \" + JSON.stringify(nextprops)\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            \"--main-color\",\r\n            nextprops.themeColor.color\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"vertical-center\">\r\n                <span>Choose Theme</span>\r\n                <button className=\"dot red\" onClick={() => themeColor(RED)} />\r\n                <button className=\"dot blue\" onClick={() => themeColor(BLUE)} />\r\n                <button className=\"dot gray\" onClick={() => themeColor(GRAY)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import { connect } from 'react-redux';\r\nimport { saveTheme } from '../actions/changeThemeAction';\r\nimport Footer from '../../Footer';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch,\r\n    saveColorTheme: color => dispatch(saveTheme(color)),\r\n})\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        themeColor: state.color\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer)","export const saveTheme = color => ({\r\n    type: 'CHANGE_THEME',\r\n    payload:{\r\n        color\r\n    }\r\n})","import React, { useState, useEffect } from 'react';\r\nimport Header from './layout/Header';\r\nimport Todos from './Todos';\r\nimport AddTodo from './AddTodo';\r\nimport { v4 as uuid } from 'uuid';\r\nimport axios from 'axios';\r\nimport Footer from './store/containers/Footer';\r\n\r\nfunction TodoApp(props) {\r\n    const [state, setState] = useState({\r\n        todos: []\r\n    });\r\n    const handleCheckboxChange = (id) => {\r\n        setState({\r\n            todos: state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        })\r\n    }\r\n    const deleteTodo = id => {\r\n        axios.delete(`http://127.0.0.1:8000/todos/${id}`).then((response) => setState({\r\n            todos: [\r\n                ...state.todos.filter(todo => todo.id !== id)]\r\n        }))\r\n    }\r\n    const addTodo = title => {\r\n        const newTodo = {\r\n            title: title,\r\n            completed: false\r\n        };\r\n        axios.post(\"http://127.0.0.1:8000/todos/\", newTodo).then((response) => setState({\r\n            todos: [\r\n                ...state.todos, response.data]\r\n        }))\r\n    }\r\n    useEffect(() => {\r\n        const config = {\r\n            params: {\r\n                _limit: 5\r\n            }\r\n        }\r\n        //tạo GET request để lấy danh sách todos\r\n        axios.get(\"http://127.0.0.1:8000/todos/\", config)\r\n            .then(response => setState({ todos: response.data }));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header />\r\n            <AddTodo addTodo={addTodo} />\r\n            <Todos todos={state.todos}\r\n                handleChange={handleCheckboxChange}\r\n                deleteTodo={deleteTodo}\r\n            />\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*class TodoApp extends React.Component {\r\n    handleCheckChange = (id) => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        })\r\n    };\r\n    deleteTodo = (id) => {\r\n        axios.delete(`http://127.0.0.1:8000/todos/${id}`).then((response) => this.setState({\r\n            todos: [\r\n                ...this.state.todos.filter(todo => todo.id !== id)]\r\n        }))\r\n    }\r\n    addTodo = title => {\r\n        const newTodo = {\r\n            title: title,\r\n            completed: false\r\n        };\r\n        axios.post(\"http://127.0.0.1:8000/todos/\", newTodo).then((response) => this.setState({\r\n            todos: [\r\n                ...this.state.todos, response.data]\r\n        }))\r\n    }\r\n    componentDidMount() {\r\n        const config = {\r\n            params: {\r\n                _limit: 5\r\n            }\r\n        }\r\n        axios.get(\"http://127.0.0.1:8000/todos/\", config).then((response) => this.setState({ todos: response.data }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header />\r\n                <AddTodo addTodo={this.addTodo} />\r\n                <Todos todos={this.state.todos}\r\n                    handleChange={this.handleCheckChange}\r\n                    deleteTodo={this.deleteTodo}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    state = {\r\n        todos: []\r\n    };\r\n}*/\r\nexport default TodoApp;","let initState = {\r\n    color: \"#FFFFFF\"\r\n}\r\nexport default function themeRenderer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"CHANGE_THEME\":\r\n            console.log('themeRenderer: ' + JSON.stringify(state))\r\n            return Object.assign({}, state, {\r\n                color: action.payload.color\r\n            });\r\n        default:\r\n            return initState;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport color from './themeReducer';\r\n\r\nexport default combineReducers({\r\n    color\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoApp from './TodoApp';\nimport reportWebVitals from './reportWebVitals';\nimport './App.css'\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>, document.getElementById('root'));\n\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n//reportWebVitals();\n"],"sourceRoot":""}